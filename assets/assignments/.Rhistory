dev.slackr("#incomingwebhook")
ggslackr(qplot(mpg, wt, data=mtcars))
barplot(VADeaths)
dev.slackr("@rfarouni")
slackr({
"attachments": [
{
"fallback": "New ticket from Andrea Lee - Ticket #1943: Can't rest my password - https://groove.hq/path/to/ticket/1943",
"pretext": "New ticket from Andrea Lee",
"title": "Ticket #1943: Can't reset my password",
"title_link": "https://groove.hq/path/to/ticket/1943",
"text": "Help! I tried to reset my password but nothing happened!",
"color": "#7CD197"
}
]
})
slackr("{
"attachments": [
{
"fallback": "New ticket from Andrea Lee - Ticket #1943: Can't rest my password - https://groove.hq/path/to/ticket/1943",
"pretext": "New ticket from Andrea Lee",
"title": "Ticket #1943: Can't reset my password",
"title_link": "https://groove.hq/path/to/ticket/1943",
"text": "Help! I tried to reset my password but nothing happened!",
"color": "#7CD197"
}
]
}")
slackr('{
"attachments": [
{
"fallback": "New ticket from Andrea Lee - Ticket #1943: Can't rest my password - https://groove.hq/path/to/ticket/1943",
"pretext": "New ticket from Andrea Lee",
"title": "Ticket #1943: Can't reset my password",
"title_link": "https://groove.hq/path/to/ticket/1943",
"text": "Help! I tried to reset my password but nothing happened!",
"color": "#7CD197"
}
]
}')
slackr("hello")
slackr('hello')
strength_df <- read.csv("/HW2/strength.csv")
getwd()
strength_df <- read.csv("HW2/strength.csv")
View(strength_df)
?read.csv
strength_df <- read.delim("HW2/strength.csv")
View(strength_df)
strength_df <- read.table("HW2/strength.csv")
strength_df <- read.table("HW2/strength.csv", colClasses = "character")
strength_df <- read.table("HW2/strength.csv", colClasses = "numeric")
c("character" , rep("numeric", 10))
strength_df <- read.table("HW2/strength.csv", colClasses = c("character" , rep("numeric", 10)))
strength_df <- read.table("HW2/strength.csv", header=TRUE)
View(strength_df)
strength_df$sex
as.numeric(as.character(strength_df$sex )
)
as.character(strength_df$sex)
as.numeric(as.character(strength_df$sex)
)
as.numeric(levels(strength_df$sex))
within( strength_d, sex =="Female")
within( strength_df, sex =="Female")
with( strength_df, sex =="Female")
strength_df_int <- within( strength_df, sex[sex == "Female"] <- 0)
within( strength_df, sex[sex == "Female"] <- 0)
with( strength_df, sex[sex == "Female"] <- 0)
strength_df$sex[with( strength_df, sex == "Female")] <-0
strength_df$sex[with( strength_df, sex == "Female")]
with( strength_df, sex == "Female")
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_df$sex[with( strength_df, sex == "Female")] <-0
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_df
strength_df$sex[with( strength_df, levels(sex) == "Female")]
with( strength_df, levels(sex) == "Female")
with( strength_df, sex == "Female")
strength_df$sex
strength_df$sex[with( strength_df, sex == "Female")] <-0
strength_df <- read.table("HW2/strength.csv", header = TRUE, colClasses = "character")
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_df <- readr::read_delim("HW2/strength.csv", header = TRUE)
strength_df <- readr::read_delim("HW2/strength.csv")
strength_df <- readr::read_delim("HW2/strength.csv", delim ="")
strength_df <- readr::read_tsv("HW2/strength.csv")
strength_df <- readr::read_tsv("HW2/strength.csv")
strength_df <- readr::read_delim("HW2/strength.csv", delim= " ")
View(strength_df)
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_df$sex <- as.character(strength_df$sex)
strength_df
strength_df$sex[with( strength_df, sex == "Female")] <- 0
strength_df
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_df$sex <- as.character(strength_df$sex)
strength_df$sex[strength_df$sex == "Female"] <- 0
strength_df$sex[strength_df$sex == "Male"] <- 1
View(strength_df)
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_df$sex <- as.character(strength_df$sex)
strength_df$sex <- as.numeric(strength_df$sex)
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_df$sex <- as.character(strength_df$sex)
strength_df$sex[strength_df$sex == "Female"] <- 0
strength_df$sex[strength_df$sex == "Male"] <- 1
strength_df$sex <- as.numeric(strength_df$sex)
View(strength_df)
strength_vars <- strength_df[ , 6:11]
pca_fit <- prcomp(strength_vars,
center = TRUE,
scale. = TRUE)
pca_fit
library(plotly)
install.packages("plotly")
library(caret)
install.packages("caret")
library(caret)
featurePlot(x = strength_vars,
plot = "pairs",
type = c("p", "smooth"))
featurePlot(x = strength_df[ , 6:11],
y = strength_df$sex,
plot = "pairs",
type = c("p", "smooth"))
pca_fit
plot(pca_fit)
biplot(pca_fit)
biplot(pca_fit, scale=0)
?prcomp
pca_fit$x
pca_fit$x %*%  pca_fit$rotation
pca_fit
svd(strength_vars)
svd_fit <- svd(strength_vars)
svd_fit
svd_fit$u%*%svd_fit$d
pca_fit <- prcomp(strength_vars,
center = TRUE,
scale. = FALSE)
pca_fit
strength_vars %*% pca_fit$rotation
pca_fit$rotation
strength_vars
as.matrix(strength_vars) %*% pca_fit$rotation
F <- svd_fit$u%*% diag(svd_fit$d)
F
strength_vars <- standardize(strength_df[ , 6:11])
strength_vars <- standard(strength_df[ , 6:11])
?scale
strength_vars <- scale(strength_df[ , 6:11])
pca_fit <- prcomp(strength_vars,
center = TRUE,
scale. = FALSE)
svd_fit <- svd(strength_vars)
F <- svd_fit$u%*% diag(svd_fit$d)
F
pca_fit
as.matrix(strength_vars) %*% pca_fit$rotation
as.matrix(strength_vars) %*% pca_fit$rotation
pca_fit$rotation
as.matrix(strength_vars) %*% pca_fit$rotation
strength_vars <- scale(strength_df[ , 6:11], scale= FALSE)
pca_fit <- prcomp(strength_vars,
center = TRUE,
scale. = FALSE)
as.matrix(strength_vars) %*% pca_fit$rotation
svd_fit <- svd(strength_vars)
F <- svd_fit$u %*% diag(svd_fit$d)
F
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_vars <- scale(strength_df[ , 6:11], scale = FALSE)
pca_fit <- prcomp(strength_vars)
summary(pca_fit)
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_vars <- scale(strength_df[ , 6:11], scale = FALSE)
pca_fit <- prcomp(strength_vars)
summary(pca_fit)
pca_fit$rotation
pca_fit$sdev
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_vars <- scale(strength_df[ , 6:11], scale = FALSE)
pca_fit <- prcomp(strength_df[ , 6:11])
summary(pca_fit)
pca_fit$rotation
pca_fit$sdev
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_vars <- scale(strength_df[ , 6:11], scale = TRUE)
pca_fit <- prcomp(strength_vars)
summary(pca_fit)
pca_fit$rotation
pca_fit$sdev
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_vars <- scale(strength_df[ , 6:11], scale = TRUE)
pca_fit <- prcomp(strength_vars)
summary(pca_fit)
# the loading (eigenvectors)
pca_fit$rotation
pca_fit$sdev
# eigenvalues
pca_fit$sdev^2
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_vars <- scale(strength_df[ , 6:11], scale = FALSE)
pca_fit <- prcomp(strength_vars)
summary(pca_fit)
# the loading (eigenvectors)
pca_fit$rotation
pca_fit$sdev
# eigenvalues
pca_fit$sdev^2
?scale
strength_df <- read.table("HW2/strength.csv", header = TRUE)
strength_vars <- scale(strength_df[ , 6:11],
center = TRUE,
scale = TRUE)
pca_fit <- prcomp(strength_vars)
summary(pca_fit)
# the loading (eigenvectors)
pca_fit$rotation
pca_fit$sdev
# eigenvalues
pca_fit$sdev^2
X <- scale(strength_df[ , 6:11],
center = TRUE,
scale = TRUE)
X <- as.matrix(scale(strength_df[ , 6:11],
center = TRUE,
scale = TRUE)
)
pca_fit <- prcomp(X)
strength_df <- read.table("HW2/strength.csv", header = TRUE)
X <- as.matrix(scale(strength_df[ , 6:11],
center = TRUE,
scale = TRUE)
)
pca_fit <- prcomp(X)
summary(pca_fit)
# the loading (eigenvectors)
Q <- pca_fit$rotation
# singular values
Sigma <- pca_fit$sdev
# eigenvalues
L <- pca_fit$sdev ^ 2
# scores
Z <- X %*% Q
Z
strength_df <- read.table("HW2/strength.csv", header = TRUE)
X <- as.matrix(scale(strength_df[ , 6:11],
center = TRUE,
scale = TRUE)
)
pca_fit <- prcomp(X)
summary(pca_fit)
# the loading (eigenvectors)
Q <- pca_fit$rotation
Q
# singular values
Sigma <- pca_fit$sdev
Sigma
# eigenvalues
L <- pca_fit$sdev ^ 2
L
# scores
Z <- X %*% Q
Z
svd_fit <- svd(X)
svd_fit
X - U%*% Sigma_svd %*%t(V)
Sigma_svd <- diag(svd_fit$d)
Sigma_svd
U  <- svd_fit$u
U
V <- svd_fit$v
V
X - U%*% Sigma_svd %*%t(V)
svd_fit <- svd(X)
Sigma_svd <- diag(svd_fit$d)
Sigma_svd
U  <- svd_fit$u
U
V <- svd_fit$v
V
res <- X - U%*% Sigma_svd %*%t(V)
res
Z_svd1 <- U %*% Sigma_svd
Z_svd1
Z_svd2 <- X %*% V
Z_svd2
Q
z1 <- Z[ , 1]
z1
z1 <- scale(Z[ , 1], center = TRUE, scale = TRUE)
z1
Sigma_svd
Sigma
strength_df <- read.table("HW2/strength.csv", header = TRUE)
X <- as.matrix(scale(strength_df[ , 6:11],
center = TRUE,
scale = TRUE)
)
pca_fit <- prcomp(X)
summary(pca_fit)
# the loading (eigenvectors)
Q <- pca_fit$rotation
Q
# singular values
Sigma <- pca_fit$sdev
Sigma
# eigenvalues
L <- pca_fit$sdev ^ 2
L
# scores
Z <- X %*% Q
Z
z1 <- Z[ , 1]
z1
z1_normalized <- scale(Z[ , 1], center = TRUE, scale = TRUE)
z1_normalized
svd_fit <- svd(X)
Sigma_svd <- diag(svd_fit$d)
Sigma_svd
U  <- svd_fit$u
U
Q <- svd_fit$v
Q
res <- X - U %*% Sigma_svd %*% t(Q)
res
Z_svd1 <- U %*% Sigma_svd
Z_svd1
Z_svd2 <- X %*% Q
Z_svd2
var(X)
var(strength_df )
var(strength_df[ , 6:11])
strength_df <- read.table("HW2/strength.csv", header = TRUE)
X <- as.matrix(scale(strength_df[ , 6:11],
center = TRUE,
scale = TRUE)
)
pca_fit <- prcomp(X)
summary(pca_fit)
# the loading (eigenvectors)
Q <- pca_fit$rotation
Q
Sigma <- pca_fit$sdev
Sigma
# eigenvalues
L <- pca_fit$sdev ^ 2
L
# sample PC scores
Z <- X %*% Q
Z
z1 <- Z[ , 1]
z1
z1_normalized <- scale(Z[ , 1], center = TRUE, scale = TRUE)
z1_normalized
svd_fit <- svd(X)
# singular values
Sigma_svd <- diag(svd_fit$d)
Sigma_svd
#the left singular vectors
U  <- svd_fit$u
U
#the right singular vectors
Q <- svd_fit$v
Q
#reconstuction error residual
res <- X - U %*% Sigma_svd %*% t(Q)
res
Z_svd1 <- U %*% Sigma_svd
Z_svd1
Z_svd2 <- X %*% Q
Z_svd2
sqrt(svd_fit$d)
Sigma
knitr::opts_chunk$set(echo = TRUE)
options(digits = 3)
strength_df <- read.table("HW2/strength.csv", header = TRUE)
X <- as.matrix(scale(strength_df[ , 6:11],
center = TRUE,
scale = TRUE)
)
pca_fit <- prcomp(X)
summary(pca_fit)
# the loading (eigenvectors)
Q <- pca_fit$rotation
Q
Sigma <- pca_fit$sdev
Sigma
# eigenvalues
L <- pca_fit$sdev ^ 2
L
# sample PC scores
Z <- X %*% Q
Z
z1 <- Z[ , 1]
z1
z1_normalized <- scale(Z[ , 1], center = TRUE, scale = TRUE)
z1_normalized
biplot(pca_fit, scale = 0)
plot(pca_fit)
svd_fit <- svd(X)
# singular values
Sigma_svd <- diag(svd_fit$d)
Sigma_svd
#the left singular vectors
U  <- svd_fit$u
U
#the right singular vectors
Q <- svd_fit$v
Q
#reconstuction error residual
res <- X - U %*% Sigma_svd %*% t(Q)
res
Z_svd1 <- U %*% Sigma_svd
Z_svd1
Z_svd2 <- X %*% Q
Z_svd2
4096*8
4096*4
strength_df <- read.table("~/Documents/repos/PSYCH7821/assets/assignments/HW2/strength.csv", header = TRUE)
getwd()
write.csv(strength_df,"strength_data.csv")
strength_df <- read.table("~/Documents/repos/PSYCH7821/assets/assignments/HW2/strength.csv", header = TRUE)
X <- as.matrix(scale(strength_df[ , 6:11],
center = TRUE,
scale = TRUE)
)
pca_fit <- prcomp(X)
summary(pca_fit)
# the loading (eigenvectors)
Q <- pca_fit$rotation
Q
Sigma <- pca_fit$sdev
Sigma
# eigenvalues
L <- pca_fit$sdev ^ 2
L
# sample PC scores
Z <- X %*% Q
Z
z1 <- Z[ , 1]
z1
z1_normalized <- scale(Z[ , 1], center = TRUE, scale = TRUE)
z1_normalized
?prcomp
strength_df <- read.table("~/Documents/repos/PSYCH7821/assets/assignments/HW2/strength.csv", header = TRUE)
X <- as.matrix(scale(strength_df[ , 6:11],
center = TRUE,
scale = TRUE)
)
pca_fit <- prcomp(X)
summary(pca_fit)
pca_fit <- prcomp(X)
summary(pca_fit)
# the loading (eigenvectors)
Q <- pca_fit$rotation
Q
Sigma <- pca_fit$sdev
Sigma
# eigenvalues
L <- pca_fit$sdev ^ 2
L
# sample PC scores
Z <- X %*% Q
Z
z1 <- Z[ , 1]
z1
?var
sd(z1)
Q
Q%*%Sigma
Q%*%diag(Sigma)
sigma <- pca_fit$sdev
sigma
# eigenvalues
L <- pca_fit$sdev ^ 2
L
# sample PC scores
Z <- X %*% Q
Z
# the loadings scaled
f <- Q %*% diag(sigma)
f
# sample PC scores scaled
Zs <- X %*% f
Zs
Z
X %*% diag(1/sigma)
z1_normalized <- scale(Z[ , 1], center = TRUE, scale = TRUE)
z1_normalized
1/sigma
sigma
Z
X %*% solve(diag(sigma))
sigma
diag(1/sigma)
X %*% diag(1/sigma)
X
f <- Q %*% diag(sigma)
f
# sample PC scores scaled
Zs <- Z %*% diag(1/sigma)
Zs
#
z1 <- Zs[ , 1]
z1
t(z1)
Q <- pca_fit$rotation
Q
as.matrix(z1)
